{
  "compiler": {
    "version": "0.8.7+commit.e28d00a7"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "tokenName",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "tokenVersion",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "tokenSymbol",
            "type": "string"
          },
          {
            "internalType": "uint8",
            "name": "tokenDecimals",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "tokenTotalSupply",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "authorizer",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "nonce",
            "type": "bytes32"
          }
        ],
        "name": "AuthorizationCanceled",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "authorizer",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "nonce",
            "type": "bytes32"
          }
        ],
        "name": "AuthorizationUsed",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "CANCEL_AUTHORIZATION_TYPEHASH",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "DOMAIN_SEPARATOR",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "PERMIT_TYPEHASH",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "RECEIVE_WITH_AUTHORIZATION_TYPEHASH",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "TRANSFER_WITH_AUTHORIZATION_TYPEHASH",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "authorizer",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "nonce",
            "type": "bytes32"
          }
        ],
        "name": "authorizationState",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "authorizer",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "nonce",
            "type": "bytes32"
          },
          {
            "internalType": "uint8",
            "name": "v",
            "type": "uint8"
          },
          {
            "internalType": "bytes32",
            "name": "r",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "s",
            "type": "bytes32"
          }
        ],
        "name": "cancelAuthorization",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "name": "nonces",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "deadline",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "v",
            "type": "uint8"
          },
          {
            "internalType": "bytes32",
            "name": "r",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "s",
            "type": "bytes32"
          }
        ],
        "name": "permit",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validAfter",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validBefore",
            "type": "uint256"
          },
          {
            "internalType": "bytes32",
            "name": "nonce",
            "type": "bytes32"
          },
          {
            "internalType": "uint8",
            "name": "v",
            "type": "uint8"
          },
          {
            "internalType": "bytes32",
            "name": "r",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "s",
            "type": "bytes32"
          }
        ],
        "name": "receiveWithAuthorization",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validAfter",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "validBefore",
            "type": "uint256"
          },
          {
            "internalType": "bytes32",
            "name": "nonce",
            "type": "bytes32"
          },
          {
            "internalType": "uint8",
            "name": "v",
            "type": "uint8"
          },
          {
            "internalType": "bytes32",
            "name": "r",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "s",
            "type": "bytes32"
          }
        ],
        "name": "transferWithAuthorization",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "version",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "allowance(address,address)": {
          "params": {
            "owner": "Token owner's address",
            "spender": "Spender's address"
          },
          "returns": {
            "_0": "Allowance amount"
          }
        },
        "approve(address,uint256)": {
          "params": {
            "amount": "Allowance amount",
            "spender": "Spender's address"
          },
          "returns": {
            "_0": "True if successful"
          }
        },
        "authorizationState(address,bytes32)": {
          "details": "Nonces are randomly generated 32-byte data unique to the authorizer's address",
          "params": {
            "authorizer": "Authorizer's address",
            "nonce": "Nonce of the authorization"
          },
          "returns": {
            "_0": "True if the nonce is used"
          }
        },
        "balanceOf(address)": {
          "params": {
            "account": "The account"
          },
          "returns": {
            "_0": "Balance"
          }
        },
        "cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)": {
          "params": {
            "authorizer": "Authorizer's address",
            "nonce": "Nonce of the authorization",
            "r": "r of the signature",
            "s": "s of the signature",
            "v": "v of the signature"
          }
        },
        "decimals()": {
          "returns": {
            "_0": "Decimals"
          }
        },
        "decreaseAllowance(address,uint256)": {
          "params": {
            "spender": "Spender's address",
            "subtractedValue": "Amount of decrease in allowance"
          },
          "returns": {
            "_0": "True if successful"
          }
        },
        "increaseAllowance(address,uint256)": {
          "params": {
            "addedValue": "Amount of increase in allowance",
            "spender": "Spender's address"
          },
          "returns": {
            "_0": "True if successful"
          }
        },
        "name()": {
          "returns": {
            "_0": "Name"
          }
        },
        "nonces(address)": {
          "params": {
            "owner": "Token owner's address"
          },
          "returns": {
            "_0": "Next nonce"
          }
        },
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
          "params": {
            "deadline": "The time at which this expires (unix time)",
            "owner": "Token owner's address (Authorizer)",
            "r": "r of the signature",
            "s": "s of the signature",
            "spender": "Spender's address",
            "v": "v of the signature",
            "value": "Amount of allowance"
          }
        },
        "receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
          "details": "This has an additional check to ensure that the payee's address matches the caller of this function to prevent front-running attacks. (See security considerations)",
          "params": {
            "from": "Payer's address (Authorizer)",
            "nonce": "Unique nonce",
            "r": "r of the signature",
            "s": "s of the signature",
            "to": "Payee's address",
            "v": "v of the signature",
            "validAfter": "The time after which this is valid (unix time)",
            "validBefore": "The time before which this is valid (unix time)",
            "value": "Amount to be transferred"
          }
        },
        "symbol()": {
          "returns": {
            "_0": "Symbol"
          }
        },
        "totalSupply()": {
          "returns": {
            "_0": "Total supply"
          }
        },
        "transfer(address,uint256)": {
          "params": {
            "amount": "Transfer amount",
            "recipient": "Payee's address"
          },
          "returns": {
            "_0": "True if successful"
          }
        },
        "transferFrom(address,address,uint256)": {
          "params": {
            "amount": "Transfer amount",
            "recipient": "Payee's address",
            "sender": "Payer's address"
          },
          "returns": {
            "_0": "True if successful"
          }
        },
        "transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
          "params": {
            "from": "Payer's address (Authorizer)",
            "nonce": "Unique nonce",
            "r": "r of the signature",
            "s": "s of the signature",
            "to": "Payee's address",
            "v": "v of the signature",
            "validAfter": "The time after which this is valid (unix time)",
            "validBefore": "The time before which this is valid (unix time)",
            "value": "Amount to be transferred"
          }
        },
        "version()": {
          "returns": {
            "_0": "Version"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "allowance(address,address)": {
          "notice": "Amount of remaining tokens spender is allowed to transfer on behalf of the token owner"
        },
        "approve(address,uint256)": {
          "notice": "Set spender's allowance over the caller's tokens to be a given value"
        },
        "authorizationState(address,bytes32)": {
          "notice": "Returns the state of an authorization"
        },
        "balanceOf(address)": {
          "notice": "Get the balance of an account"
        },
        "cancelAuthorization(address,bytes32,uint8,bytes32,bytes32)": {
          "notice": "Attempt to cancel an authorization"
        },
        "decimals()": {
          "notice": "Number of decimal places"
        },
        "decreaseAllowance(address,uint256)": {
          "notice": "Decrease the allowance by a given amount"
        },
        "increaseAllowance(address,uint256)": {
          "notice": "Increase the allowance by a given amount"
        },
        "name()": {
          "notice": "Token name"
        },
        "nonces(address)": {
          "notice": "Nonces for permit"
        },
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
          "notice": "update allowance with a signed permit"
        },
        "receiveWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
          "notice": "Receive a transfer with a signed authorization from the payer"
        },
        "symbol()": {
          "notice": "Token symbol"
        },
        "totalSupply()": {
          "notice": "Total amount of tokens in circulation"
        },
        "transfer(address,uint256)": {
          "notice": "Transfer tokens from the caller"
        },
        "transferFrom(address,address,uint256)": {
          "notice": "Transfer tokens by spending allowance"
        },
        "transferWithAuthorization(address,address,uint256,uint256,uint256,bytes32,uint8,bytes32,bytes32)": {
          "notice": "Execute a transfer with a signed authorization"
        },
        "version()": {
          "notice": "Token version"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/Token.sol": "Token"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "remappings": []
  },
  "sources": {
    "@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45",
      "license": "MIT",
      "urls": [
        "bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e",
        "dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX"
      ]
    },
    "@openzeppelin/contracts/utils/math/SafeMath.sol": {
      "keccak256": "0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e",
      "license": "MIT",
      "urls": [
        "bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509",
        "dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT"
      ]
    },
    "contracts/Token.sol": {
      "keccak256": "0x0cc5130982e5875cf25eddb63978f2996726df1a156fb02c8b00249ad2c370fe",
      "license": "MIT",
      "urls": [
        "bzz-raw://af6aa0c7d830a8023e1c6760bae3bae03464578fe357bd12632c8d192ce7b640",
        "dweb:/ipfs/QmUY6UAVyNevbYNemcGGmUPx2QjEVQyBi32EwLG5NKFGw7"
      ]
    },
    "contracts/lib/ECRecover.sol": {
      "keccak256": "0x7ca190bde28972b9464be1d282243c1548c4d6fac8012d5a52683262bd6208b5",
      "license": "MIT",
      "urls": [
        "bzz-raw://89e19b5d06980a4f05b58c32d6db0ff396bdbf47a6f6a72af19ea6c1879b76f2",
        "dweb:/ipfs/QmeCWHH4og3BewFAD5rwEPdGPDxbpx5ZazjBybCEEyoUrV"
      ]
    },
    "contracts/lib/EIP2612.sol": {
      "keccak256": "0xe1ccb9fe17bae900f7e10c360eb25de906e8e867956f7d4bfe27f739cd08cc82",
      "license": "MIT",
      "urls": [
        "bzz-raw://00faf5abb1b4fce13f26b46868a0b19697f1e6a983aaa6f3fb518c439f622e62",
        "dweb:/ipfs/QmdABHfuSnBdHKwj6TimN4PrTsTRohNvW7ouZNAAP4NAG5"
      ]
    },
    "contracts/lib/EIP3009.sol": {
      "keccak256": "0x43c3fe79da8daa525867b2b40091670bbdae973f46485ec55005c3abdf406f97",
      "license": "MIT",
      "urls": [
        "bzz-raw://0928cc1346444b1067b2d0210287dab507b1bcfb7b85e28283bb1e872b0cf9cb",
        "dweb:/ipfs/QmXXp2VKmzzKehaqa4JMcxVZQ6JPjhP4kDyFYbKkCY9GjP"
      ]
    },
    "contracts/lib/EIP712.sol": {
      "keccak256": "0x676b81d5a8ad375ede0fe42f697e279c011412ec8ad43e9dae74e53cf6fae0c4",
      "license": "MIT",
      "urls": [
        "bzz-raw://41d010cc8ccd5924f3ab5b584a51a2b92a38545dc2740acab19d20bb3c005862",
        "dweb:/ipfs/QmcmHZ7Muu8CStnBKcjDttEHnMnar5qQhJMg3KDkUbRnpM"
      ]
    },
    "contracts/lib/EIP712Domain.sol": {
      "keccak256": "0x81e2593665f43cc4da2945da1f7aa72fda1fcae3ab236f4b46793765656182d5",
      "license": "MIT",
      "urls": [
        "bzz-raw://9f31fc8847d034369148ec8652d7e8c06712d9035f9402d721003f7a3d129664",
        "dweb:/ipfs/QmYbP6j4RRZVDApNAyMNma4fKPy2ezjXGUDVKTWGoR4Tfq"
      ]
    },
    "contracts/lib/IERC20Internal.sol": {
      "keccak256": "0x16a2bbd895e23ac54cad8421b0a803cd91aee4e44d420e8e272db152f9ceca70",
      "license": "MIT",
      "urls": [
        "bzz-raw://f73be28fb3db37c183ac884b16453873415bba7dd18110af470ce2b1eff5d025",
        "dweb:/ipfs/QmdQ8WQQ29UqWzc3BFuR1bu1gYktgLZrR4XZjWe9a1CbpX"
      ]
    }
  },
  "version": 1
}
